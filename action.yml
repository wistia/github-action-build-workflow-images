name: 'Build Workflow Images'
description: 'A Dispatchery V2 CI component - build Docker images for all workflows'
author: 'Wistia'
inputs:
  ecr_repo_name:
    description: 'ECR repository for storing the built images'
    required: true
  repo_name:
    description: 'Value of "github.event.repository.name"'
    required: true
  ecr_hostname:
    description: 'ECR hostname - <aws_account>.dkr.ecr.<region>.amazonaws.com'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Build Docker images that Argo workflows depend on
      id: build-images
      run: |
        set -euo pipefail
        cd "${{ inputs.repo_name }}/argo-workflows"
        list_of_dockerfiles="$(find . -name 'Dockerfile*')"
        if [[ ! -z ${list_of_dockerfiles} ]]; then
          for dockerfile_path in ${list_of_dockerfiles}; do
            echo "Building image for $dockerfile_path"
            build_context_dir="$(dirname $dockerfile_path)"
            job_name="$(basename $build_context_dir)"
            # If a suffix is defined for the Dockerfile, use it as container_name.
            dockerfile_name=$(basename ${dockerfile_path})
            container_name="${dockerfile_name##*.}"
            if [[ ${container_name} == "Dockerfile" ]]; then
              container_name="default"
            fi
            # If the file is named 'Dockerfile', container_name is 'default'
            tag="${{ inputs.ecr_hostname }}/${{ inputs.ecr_repo_name }}:${{ inputs.repo_name }}-${job_name}-${container_name}-${{ github.sha }}"

            docker build -t "$tag" -f "$dockerfile_path" "$build_context_dir"
            docker push $tag
          done
        fi
      shell: bash
